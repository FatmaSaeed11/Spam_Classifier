# -*- coding: utf-8 -*-
"""Spam Classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RGFxzvpChE0mqPZJLlcr4lEgjkgvzHUA

Import dataset from kaggle
"""

!pip install kaggle

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d bhaskarreddy072/mail-datacsv

from zipfile import ZipFile
dataset='/content/mail-datacsv.zip'
with ZipFile(dataset,'r') as zip:
  zip.extractall()
  print('the dataset is extracted')

"""Load important libraries"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

All_mail_data=pd.read_csv('/content/mail-datacsv.zip')

print(All_mail_data)

"""Replace Nulls"""

dataset=All_mail_data.where((pd.notnull(All_mail_data)),'')

dataset.head()

dataset.shape

"""Encoding

"""

#spam 0 ,ham 1
dataset.loc[dataset['Category']=='spam','Category',]=0
dataset.loc[dataset['Category']=='ham','Category',]=1

"""Separate data

"""

X=dataset['Message']
Y=dataset['Category']

print(X)

print(Y)

print(X.head())

print(X[1])

"""Split Data"""

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=3)

print(X.shape)
print(X_train.shape)
print(X_test.shape)

"""Feature extraction"""

feature_extraction=TfidfVectorizer(min_df = 1,stop_words='english',lowercase =True)
#convert to num

X_train_features=feature_extraction.fit_transform(X_train)
X_test_features=feature_extraction.transform(X_test)

#convert to int

Y_train=Y_train.astype(int)
Y_test=Y_train.astype(int)

print(X_train_features)

print (Y_train)

"""Training"""

model=LogisticRegression()

model.fit(X_train_features,Y_train)

"""Predict and get accuracy


"""

#prediction
prediction_All=model.predict(X_train_features)
accuracy=accuracy_score(Y_train,prediction_All)
print('Accuracy :',accuracy)

"""Prediction system

"""

input_mail=["WINNER!! As a valued network customer you have been selected to receivea Â£900 prize reward! To claim call 09061701461. Claim code KL341. Valid 12 hours only."]

#convert to num
input_features=feature_extraction.transform(input_mail)

#predict
prediction=model.predict(input_features)
print(prediction)

if(prediction[0]==1):
  print('Ham')
else:
  print('Spam')

input_mail=["	Go until jurong point, crazy.. Available only in bugis n great world la e buffet... Cine there got amore wat..."]
#convert to num
input_features=feature_extraction.transform(input_mail)

#predict
prediction=model.predict(input_features)
print(prediction)

if(prediction[0]==1):
  print('Ham')
else:
  print('Spam')